{"version":3,"sources":["components/WithFilters/index.tsx","contexts/ConfigurationContext.tsx","contexts/JobsContext.tsx","helpers/SortJobs.tsx","components/Jobs/styles.tsx","components/Jobs/Jobs.tsx","components/Job/Job.tsx","components/Job/styles.tsx","components/Job/index.tsx","contexts/FilterContext.tsx","components/FabList/styles.tsx","components/FabList/index.tsx","components/filters/CountryFilter/styles.tsx","components/filters/CountryFilter/index.tsx","components/filters/TechnologyFilter/index.tsx","components/filters/SalaryFilter/styles.tsx","components/filters/SalaryFilter/index.tsx","components/filters/styles.tsx","components/filters/index.tsx","custom-hooks/useLocalStorage/index.tsx","components/Jobs/index.tsx","styles/index.tsx","styles/colors/index.tsx","components/Navbar/styles.tsx","components/Navbar/index.tsx","sections/main/index.tsx","custom-hooks/useVanHackAPI/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Component","ConfigurationContext","createContext","configuration","Provider","ConfigurationProvider","children","value","defaultConfig","require","JobsContext","jobs","setJobs","JobsProvider","useState","sort","currentJob","nextJob","city","salary","country","makeStyles","spaceTop","marginTop","center","textAlign","fetchingData","classes","styles","Container","className","CircularProgress","size","style","Grid","container","spacing","direction","justify","alignItems","onClick","item","xs","sm","spaceBottom","marginBottom","spacedBetween","margin","currency","link","positionName","mustHaveSkills","niceToHaveSkills","jump","useContext","code","countries","getCountryCode","Typography","variant","gutterBottom","Job","window","open","Card","CardActionArea","CardContent","Divider","map","key","name","Chip","avatar","Avatar","toUpperCase","label","color","FilterContext","setCountries","technologies","setTechnologies","salaryRange","setSalaryRange","FilterProvider","theme","createStyles","root","position","bottom","right","itemList","width","maxWidth","backgroundColor","borderRadius","border","rotate","transform","closedPosition","onClose","listPosition","setListPosition","List","Fab","aria-label","Add","undefined","palette","background","paper","selectEmpty","marginFlag","marginRight","form","selectedFlag","setSelectedFlag","Set","job","FormControl","InputLabel","htmlFor","Select","autoWidth","multiple","onChange","event","selectedCountries","target","inputProps","id","renderValue","MenuItem","ListItemText","primary","Checkbox","checked","indexOf","fullWidth","maxRange","setMaxRange","useEffect","salaries","filter","maxSalary","Math","max","apply","Slider","newSalaryRange","aria-labelledby","step","valueLabelDisplay","salaryAvatar","cursor","avatarPulse","boxShadow","animation","onFilter","salaryIconColor","setSalaryIconColor","localStorageKey","localStorage","getItem","setValue","setItem","JSON","parse","useLocalStorage","salaryPulseShowed","setSalaryPulseShowed","minSalary","FabList","ListItem","ListItemAvatar","Flag","CountryFilter","component","Code","TechnologyFilter","LocalAtm","SalaryFilter","Alert","props","elevation","withFilters","Jobs","length","items","isSnackbarOpened","setIsSnackbarOpened","handleCloseSnackbar","reason","filters","filteredJobs","includes","some","technology","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","severity","appBar","features","AppBar","Toolbar","IconButton","edge","retrievedJobs","fetchJobs","a","skipCount","axios","get","baseURL","api","maxResults","headers","data","result","push","jobsURL","salaryRangeEnd","salaryRangeStart","sortJobs","then","useVanHackAPI","Navbar","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3bcb2159.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Snackbar } from \"@material-ui/core\";\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\nimport { iJob, iSkill } from \"../../interfaces\";\nimport { FilterProvider } from \"../../contexts/FilterContext\";\nimport Filters from \"../filters\";\n\ninterface iProps {\n  jobs: iJob[];\n}\n\nconst Alert = (props: AlertProps) => (\n  <MuiAlert elevation={6} variant=\"filled\" {...props} />\n);\n\nexport default (Component: React.FunctionComponent<iProps>) => ({\n  items,\n}: {\n  items: iJob[];\n}) => {\n  const [jobs, setJobs] = useState<iJob[]>([]);\n  const [isSnackbarOpened, setIsSnackbarOpened] = useState<boolean>(false);\n\n  useEffect(() => setJobs(items), [items]);\n\n  const handleFilter = (...filters: any) => {\n    const [countries, [minSalary, maxSalary], technologies] = filters;\n    let filteredJobs: iJob[] = items;\n\n    if (countries.length > 0) {\n      filteredJobs = filteredJobs.filter((job: iJob) =>\n        countries.includes(job.country)\n      );\n    }\n\n    filteredJobs = filteredJobs.filter(\n      (job: iJob) => job.salary >= minSalary && job.salary <= maxSalary\n    );\n\n    if (technologies.length > 0) {\n      filteredJobs = filteredJobs.filter((job: iJob) =>\n        technologies.some(\n          (technology: string) =>\n            job.mustHaveSkills\n              ?.map(({ name }: iSkill) => name)\n              .includes(technology) ||\n            job.niceToHaveSkills\n              ?.map(({ name }: iSkill) => name)\n              .includes(technology)\n        )\n      );\n    }\n\n    if (filteredJobs.length > 0) {\n      setJobs(filteredJobs);\n    } else {\n      setIsSnackbarOpened(true);\n    }\n  };\n\n  const handleCloseSnackbar = (\n    event?: React.SyntheticEvent,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setIsSnackbarOpened(false);\n  };\n\n  return (\n    <FilterProvider jobs={items}>\n      <Component jobs={jobs} />\n      <Filters onFilter={handleFilter} />\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n        open={isSnackbarOpened}\n        onClose={handleCloseSnackbar}\n        autoHideDuration={6000}\n      >\n        <Alert onClose={handleCloseSnackbar} severity=\"error\">\n          There are no jobs that fulfill the applied filters\n        </Alert>\n      </Snackbar>\n    </FilterProvider>\n  );\n};\n","import React, { createContext, ReactNode } from \"react\";\nimport defaultConfig from \"../configurations/config.default.json\";\nimport Exception from \"../constants/exceptions\";\nimport { iConfiguration } from \"../interfaces\";\n\ninterface iContext {\n  configuration: iConfiguration;\n}\n\nconst ConfigurationContext = createContext<iContext>({\n  configuration: {},\n} as iContext);\nconst { Provider } = ConfigurationContext;\n\nconst getEnvironmentConfiguration = () => {\n  switch (process.env.NODE_ENV) {\n    case \"production\": {\n      return {\n        ...defaultConfig,\n        ...require(\"../configurations/config.prod.json\"),\n      };\n    }\n    case \"development\": {\n      return {\n        ...defaultConfig,\n        ...require(\"../configurations/config.dev.json\"),\n      };\n    }\n    default: {\n      throw Exception.INVALID_ENVIRONMENT;\n    }\n  }\n};\n\nconst ConfigurationProvider = ({ children }: { children: ReactNode }) => (\n  <Provider value={{ configuration: getEnvironmentConfiguration() }}>\n    {children}\n  </Provider>\n);\n\nexport { ConfigurationContext, ConfigurationProvider };\n","import React, {\n  createContext,\n  Dispatch,\n  ReactNode,\n  SetStateAction,\n  useState,\n} from \"react\";\nimport { iJob } from \"../interfaces\";\n\ninterface iContext {\n  jobs: iJob[];\n  setJobs: Dispatch<SetStateAction<iJob[]>>;\n}\n\nconst JobsContext = createContext<iContext>({\n  jobs: [],\n  setJobs: () => {},\n} as iContext);\n\nconst { Provider } = JobsContext;\n\nconst JobsProvider = ({ children }: { children: ReactNode }) => {\n  const [jobs, setJobs] = useState<iJob[]>([]);\n\n  return <Provider value={{ jobs, setJobs }}>{children}</Provider>;\n};\n\nexport { JobsContext, JobsProvider };\n","import { iJob } from \"../interfaces\";\n\nexport default (jobs: iJob[]) => {\n  jobs.sort((currentJob: iJob, nextJob: iJob) =>\n    currentJob.city < nextJob.city ? -1 : 1\n  );\n\n  jobs.sort((currentJob: iJob, nextJob: iJob) =>\n    currentJob.salary > nextJob.salary ? -1 : 1\n  );\n\n  return jobs.sort((currentJob: iJob, nextJob: iJob) =>\n    currentJob.country < nextJob.country ? -1 : 1\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles({\n  spaceTop: {\n    marginTop: \"50px\",\n  },\n  center: {\n    textAlign: \"center\",\n  },\n});\n","import React, { ReactNode } from \"react\";\nimport { CircularProgress, Container, Grid } from \"@material-ui/core\";\nimport styles from \"./styles\";\n\ninterface Props {\n  children: ReactNode;\n  fetchingData: boolean;\n}\n\nexport default ({ children, fetchingData }: Props) => {\n  const classes = styles();\n\n  return (\n    <Container className={classes.center}>\n      {fetchingData ? (\n        <CircularProgress size={150} style={{ marginTop: \"25%\" }} />\n      ) : (\n        <Grid\n          container\n          spacing={1}\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"center\"\n          className={classes.spaceTop}\n        >\n          {children}\n        </Grid>\n      )}\n    </Container>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\ninterface Props {\n  children: ReactNode;\n  onClick: () => void;\n}\n\nexport default ({ children, onClick }: Props) => {\n  return (\n    <Grid item xs={12} sm={3} onClick={onClick}>\n      {children}\n    </Grid>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles({\n  spaceTop: {\n    marginTop: \"25px\",\n  },\n  spaceBottom: {\n    marginBottom: \"16px\",\n  },\n  spacedBetween: {\n    margin: \"2px\",\n  },\n});\n","import React, { useContext } from \"react\";\nimport { iJob, iSkill } from \"../../interfaces\";\nimport Job from \"./Job\";\nimport {\n  Avatar,\n  Card,\n  CardActionArea,\n  CardContent,\n  Chip,\n  Divider,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport { FlagIcon } from \"react-flag-kit\";\nimport { ConfigurationContext } from \"../../contexts/ConfigurationContext\";\n\ninterface Props extends iJob {\n  jump: boolean;\n}\n\nexport default ({\n  country,\n  city,\n  currency,\n  salary,\n  link,\n  positionName,\n  mustHaveSkills,\n  niceToHaveSkills,\n  jump,\n}: Props) => {\n  const { configuration } = useContext(ConfigurationContext);\n\n  const classes = styles();\n  const getCountryCode = (country: string) => configuration.countries[country];\n\n  return (\n    <>\n      {jump && (\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"center\"\n          className={classes.spaceTop}\n          style={{ textAlign: \"left\" }}\n        >\n          <Grid item xs={2} sm={1}>\n            <FlagIcon\n              key={country}\n              code={getCountryCode(country)}\n              size={32}\n              style={{ marginBottom: \"10px\" }}\n            />\n          </Grid>\n          <Grid item xs={2}>\n            <Typography variant=\"h4\" gutterBottom>\n              {country}\n            </Typography>\n          </Grid>\n        </Grid>\n      )}\n      <Job onClick={() => window.open(link)}>\n        <Card>\n          <CardActionArea>\n            <CardContent>\n              <Grid\n                container\n                spacing={1}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item xs={12} sm={6}>\n                  <div>{country}</div>\n                  <div>\n                    <b>{city}</b>\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <div>\n                    {salary ? (\n                      <b>\n                        {salary}K {currency}\n                      </b>\n                    ) : (\n                      \"Not informed\"\n                    )}\n                  </div>\n                </Grid>\n                <Grid item xs={12}>\n                  <Divider variant=\"middle\" className={classes.spaceBottom} />\n                  {positionName}\n                </Grid>\n                <Grid item xs={12}>\n                  {mustHaveSkills?.map(({ name }: iSkill, key: number) => (\n                    <Chip\n                      className={classes.spacedBetween}\n                      key={key}\n                      size=\"small\"\n                      avatar={<Avatar>{name[0].toUpperCase()}</Avatar>}\n                      label={name}\n                      color=\"secondary\"\n                    />\n                  ))}\n                  {niceToHaveSkills?.map(({ name }: iSkill, key: number) => (\n                    <Chip\n                      className={classes.spacedBetween}\n                      key={key}\n                      size=\"small\"\n                      avatar={<Avatar>{name[0].toUpperCase()}</Avatar>}\n                      label={name}\n                      color=\"secondary\"\n                      variant=\"outlined\"\n                    />\n                  ))}\n                </Grid>\n              </Grid>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </Job>\n    </>\n  );\n};\n","import React, {\n  createContext,\n  Dispatch,\n  ReactNode,\n  SetStateAction,\n  useState,\n} from \"react\";\nimport { iJob } from \"../interfaces\";\n\ninterface iProps {\n  children: ReactNode;\n  jobs: iJob[];\n}\n\ninterface iContext {\n  jobs: iJob[];\n  countries: string[];\n  setCountries: Dispatch<SetStateAction<string[]>>;\n  technologies: string[];\n  setTechnologies: Dispatch<SetStateAction<string[]>>;\n  salaryRange: number[];\n  setSalaryRange: Dispatch<SetStateAction<number[]>>;\n}\n\nconst FilterContext = createContext<iContext>({\n  jobs: [],\n  countries: [],\n  setCountries: () => {},\n  technologies: [],\n  setTechnologies: () => {},\n  salaryRange: [],\n  setSalaryRange: () => {},\n} as iContext);\n\nconst { Provider } = FilterContext;\n\nconst FilterProvider = ({ children, jobs }: iProps) => {\n  const [countries, setCountries] = useState<string[]>([]);\n  const [technologies, setTechnologies] = useState<string[]>([]);\n  const [salaryRange, setSalaryRange] = useState<number[]>([]);\n\n  return (\n    <Provider\n      value={{\n        jobs,\n        countries,\n        setCountries,\n        technologies,\n        setTechnologies,\n        salaryRange,\n        setSalaryRange,\n      }}\n    >\n      {children}\n    </Provider>\n  );\n};\n\nexport { FilterContext, FilterProvider };\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { createStyles } from \"@material-ui/styles\";\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: \"fixed\",\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n    itemList: {\n      position: \"fixed\",\n      width: \"100%\",\n      maxWidth: 360,\n      bottom: theme.spacing(10),\n      backgroundColor: \"#fbfbfb\",\n      borderRadius: \"10px\",\n      border: \"1px solid #d9d9d9\",\n    },\n    rotate: {\n      transform: \"rotate(45deg)\",\n    },\n  })\n);\n","import React, { ReactNode, useState } from \"react\";\nimport { Fab, List } from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport styles from \"./styles\";\n\ninterface iProps {\n  children: ReactNode;\n  onClose?: () => void;\n}\n\nconst [openedPosition, closedPosition] = [16, -1000];\n\nexport default ({ children, onClose }: iProps) => {\n  const [listPosition, setListPosition] = useState<number>(closedPosition);\n  const classes = styles();\n\n  const handleClick = () => {\n    if (listPosition === closedPosition) {\n      setListPosition(openedPosition);\n    } else {\n      setListPosition(closedPosition);\n      typeof onClose !== \"undefined\" && onClose();\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <List className={classes.itemList} style={{ right: `${listPosition}px` }}>\n        {children}\n      </List>\n      <Fab color=\"primary\" aria-label=\"add\" onClick={handleClick}>\n        <Add\n          className={\n            listPosition === openedPosition ? classes.rotate : undefined\n          }\n        />\n      </Fab>\n    </div>\n  );\n};\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { createStyles } from \"@material-ui/styles\";\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    marginFlag: {\n      marginTop: \"5px\",\n      marginRight: \"5px\",\n    },\n    form: {\n      width: \"100%\",\n    },\n  })\n);\n","import React, { useContext, useState } from \"react\";\nimport {\n  Checkbox,\n  FormControl,\n  InputLabel,\n  ListItemText,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { FlagIcon } from \"react-flag-kit\";\nimport { FilterContext } from \"../../../contexts/FilterContext\";\nimport { iJob } from \"../../../interfaces\";\nimport styles from \"./styles\";\nimport { ConfigurationContext } from \"../../../contexts/ConfigurationContext\";\n\nexport default () => {\n  const { configuration } = useContext(ConfigurationContext);\n  const { jobs, setCountries } = useContext(FilterContext);\n  const [selectedFlag, setSelectedFlag] = useState<string[]>([]);\n  const classes = styles();\n\n  const countries = [...new Set(jobs.map((job: iJob) => job.country))];\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const selectedCountries = event.target.value as string[];\n    setSelectedFlag(selectedCountries);\n    setCountries(selectedCountries);\n  };\n\n  const getCountryCode = (country: string) => configuration.countries[country];\n\n  return (\n    <FormControl className={classes.form}>\n      <InputLabel htmlFor=\"select-country\">Countries</InputLabel>\n      <Select\n        autoWidth={false}\n        multiple\n        value={selectedFlag}\n        onChange={handleChange}\n        inputProps={{\n          id: \"select-country\",\n        }}\n        renderValue={(countries) =>\n          (countries as string[]).map((country) => (\n            <FlagIcon key={country} code={getCountryCode(country)} size={16} />\n          ))\n        }\n      >\n        {countries.map((country: string) => (\n          <MenuItem key={country} value={country}>\n            <ListItemText primary={country} />\n            <Checkbox checked={selectedFlag.indexOf(country) > -1} />\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, { useContext } from \"react\";\nimport ChipInput from \"material-ui-chip-input\";\nimport { FilterContext } from \"../../../contexts/FilterContext\";\n\nexport default () => {\n  const { setTechnologies } = useContext(FilterContext);\n\n  return (\n    <ChipInput\n      fullWidth\n      onChange={setTechnologies}\n      label=\"Enter technologies\"\n    />\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles({\n  root: {\n    width: \"100%\",\n  },\n});\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { iJob } from \"../../../interfaces\";\nimport { FilterContext } from \"../../../contexts/FilterContext\";\nimport { Slider, Typography } from \"@material-ui/core\";\nimport styles from \"./styles\";\n\nconst RANGE_STEP: number = 10;\n\nexport default () => {\n  const { jobs, salaryRange, setSalaryRange } = useContext(FilterContext);\n  const [maxRange, setMaxRange] = useState<number>(0);\n  const classes = styles();\n\n  useEffect(() => {\n    const salaries = jobs\n      .filter(({ salary }: iJob) => salary)\n      .map(({ salary }: iJob) => salary);\n\n    const maxSalary: number = Math.max.apply(Math, salaries);\n    setMaxRange(maxSalary);\n    setSalaryRange([0, maxSalary]);\n  }, [jobs, setSalaryRange]);\n\n  const handleChange = (event: any, newSalaryRange: number | number[]) => {\n    setSalaryRange(newSalaryRange as number[]);\n  };\n\n  const isNotInformed = () => salaryRange[0] === 0 && 0 === salaryRange[1];\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"range-slider\" gutterBottom>\n        {isNotInformed()\n          ? \"Not informed\"\n          : `Salary range (${salaryRange[0]} - ${salaryRange[1]})`}\n      </Typography>\n      <Slider\n        value={salaryRange}\n        onChange={handleChange}\n        aria-labelledby=\"range-slider\"\n        step={RANGE_STEP}\n        valueLabelDisplay=\"auto\"\n        max={maxRange}\n        style={{ color: \"#34dc87\" }}\n      />\n    </div>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles({\n  salaryAvatar: {\n    cursor: \"pointer\",\n  },\n  avatarPulse: {\n    boxShadow: \"0 0 0 rgba(28, 189, 107, 0.4)\",\n    animation: \"$pulse 2s infinite\",\n    \"&:hover\": {\n      animation: \"none\",\n    },\n  },\n  \"@keyframes pulse\": {\n    \"0%\": {\n      \"-moz-box-shadow\": \"0 0 0 0 rgba(28, 189, 107, 0.4)\",\n      \"-webkit-box-shadow\": \"0 0 0 0 rgba(28, 189, 107, 0.4)\",\n      \"box-shadow\": \"0 0 0 0 rgba(28, 189, 107, 0.4)\",\n    },\n    \"70%\": {\n      \"-moz-box-shadow\": \"0 0 0 10px rgba(28, 189, 107, 0)\",\n      \"-webkit-box-shadow\": \"0 0 0 10px rgba(28, 189, 107, 0)\",\n      \"box-shadow\": \"0 0 0 10px rgba(28, 189, 107, 0)\",\n    },\n    \"100%\": {\n      \"-moz-box-shadow\": \"0 0 0 0 rgba(28, 189, 107, 0)\",\n      \"-webkit-box-shadow\": \"0 0 0 0 rgba(28, 189, 107, 0)\",\n      \"box-shadow\": \"0 0 0 0 rgba(28, 189, 107, 0)\",\n    },\n  },\n});\n","import React, { useContext, useEffect, useState } from \"react\";\nimport FabList from \"../FabList\";\nimport {\n  Avatar,\n  Divider,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { Code, Flag, LocalAtm } from \"@material-ui/icons\";\nimport CountryFilter from \"../filters/CountryFilter\";\nimport TechnologyFilter from \"../filters/TechnologyFilter\";\nimport SalaryFilter from \"../filters/SalaryFilter\";\nimport { FilterContext } from \"../../contexts/FilterContext\";\nimport useLocalStorage from \"../../custom-hooks/useLocalStorage\";\nimport styles from \"./styles\";\n\nexport default ({ onFilter }: { onFilter: (...args: any) => void }) => {\n  const { countries, salaryRange, technologies, setSalaryRange } = useContext(\n    FilterContext\n  );\n  const [salaryIconColor, setSalaryIconColor] = useState<string>(\"#34dc87\");\n  const [salaryPulseShowed, setSalaryPulseShowed] = useLocalStorage(\n    \"show-salary-pulse\"\n  );\n\n  const classes = styles();\n\n  const handleOnClose = () => {\n    onFilter(countries, salaryRange, technologies);\n  };\n\n  const handleSalaryRange = () => {\n    setSalaryPulseShowed(\"true\");\n    setSalaryRange([0, 0]);\n  };\n\n  useEffect(() => {\n    const [minSalary, maxSalary] = salaryRange;\n\n    if (minSalary === 0 && 0 === maxSalary) {\n      setSalaryIconColor(\"#acacac\");\n    } else {\n      setSalaryIconColor(\"#34dc87\");\n    }\n  }, [salaryRange]);\n\n  return (\n    <FabList onClose={handleOnClose}>\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar style={{ backgroundColor: \"tomato\" }}>\n            <Flag />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={<CountryFilter />} />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar style={{ backgroundColor: \"cornflowerblue\" }}>\n            <Code />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={<TechnologyFilter />} />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n      <ListItem>\n        <ListItemAvatar>\n          <>\n            <Avatar\n              className={`${classes.salaryAvatar} ${\n                !salaryPulseShowed ? classes.avatarPulse : null\n              }`}\n              style={{ backgroundColor: salaryIconColor }}\n              onClick={handleSalaryRange}\n            >\n              <LocalAtm />\n            </Avatar>\n          </>\n        </ListItemAvatar>\n        <ListItemText primary={<SalaryFilter />} />\n      </ListItem>\n    </FabList>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\nexport default (localStorageKey: string) => {\n  const [value, setValue] = useState<string>(\n    localStorage.getItem(localStorageKey) || \"\"\n  );\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, value);\n  }, [localStorageKey, value]);\n\n  return [value ? JSON.parse(value) : value, setValue] as const;\n};\n","import React from \"react\";\nimport Jobs from \"./Jobs\";\nimport Job from \"../Job\";\nimport { iJob } from \"../../interfaces\";\nimport withFilters from \"../WithFilters\";\n\nexport default withFilters(({ jobs }: { jobs: iJob[] }) => {\n  return (\n    <Jobs fetchingData={jobs.length === 0}>\n      {jobs.map((job: iJob, key: number) => (\n        <Job\n          key={key}\n          jump={key === 0 || (key > 0 && job.country !== jobs[key - 1].country)}\n          {...job}\n        />\n      ))}\n    </Jobs>\n  );\n});\n","import colors from \"./colors\";\n\nexport default {\n  colors,\n};\n","export default {\n  primary: \"#0675ce\",\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../styles/index\";\n\nexport default makeStyles({\n  appBar: {\n    backgroundColor: styles.colors.primary,\n  },\n  features: {\n    position: \"absolute\",\n    right: \"50px\",\n  },\n});\n","import React from \"react\";\nimport { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport styles from \"./styles\";\n\nexport default () => {\n  const classes = styles();\n\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\">Van Hack</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import React from \"react\";\nimport useVanHackAPI from \"../../custom-hooks/useVanHackAPI\";\nimport Jobs from \"../../components/Jobs\";\nimport Navbar from \"../../components/Navbar\";\n\nexport default () => {\n  const [items] = useVanHackAPI();\n\n  return (\n    <>\n      <Navbar />\n      <Jobs items={items} />\n    </>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ConfigurationContext } from \"../../contexts/ConfigurationContext\";\nimport { iConfiguration, iJob } from \"../../interfaces\";\nimport { JobsContext } from \"../../contexts/JobsContext\";\nimport sortJobs from \"../../helpers/SortJobs\";\n\nexport default () => {\n  const { configuration } = useContext(ConfigurationContext);\n  const { jobs, setJobs } = useContext(JobsContext);\n  const retrievedJobs: iJob[] = [];\n\n  const fetchJobs = async (\n    configuration: iConfiguration,\n    skipCount: number = 0\n  ) => {\n    const {\n      data: {\n        result: { items },\n      },\n    } = await axios.get(\n      `${configuration.baseURL}/v1/job/search/full/?MaxResultCount=${configuration.api.maxResults}&SkipCount=${skipCount}`,\n      {\n        headers: configuration.api.headers,\n      }\n    );\n\n    retrievedJobs.push(\n      ...items.map((job: iJob) => ({\n        ...job,\n        link: `${configuration.api.jobsURL}${job.id}`,\n        salary: job.salaryRangeEnd || job.salaryRangeStart || null,\n      }))\n    );\n\n    if (items.length === configuration.api.maxResults) {\n      await fetchJobs(configuration, skipCount + configuration.api.maxResults);\n    }\n\n    return sortJobs(retrievedJobs);\n  };\n\n  useEffect(() => {\n    fetchJobs(configuration).then(setJobs);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return [jobs];\n};\n","import React from \"react\";\nimport Main from \"./sections/main\";\nimport { ConfigurationProvider } from \"./contexts/ConfigurationContext\";\nimport { JobsProvider } from \"./contexts/JobsContext\";\n\nfunction App() {\n  return (\n    <ConfigurationProvider>\n      <JobsProvider>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </JobsProvider>\n    </ConfigurationProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}